import React from 'react';
import { useForm, SubmitHandler } from 'react-hook-form';
import { Field } from '../types';

interface FormRendererProps {
  schema: FormSchema;
}

const FormRenderer: React.FC<FormRendererProps> = ({ schema }) => {
  const { register, handleSubmit, formState: { errors } } = useForm();
  const onSubmit: SubmitHandler<any> = (data) => {
    console.log('Form Data:', data);
    alert('Form submitted successfully!');
  };

  if (!schema.fields.length) {
    return <p className="text-gray-500">No fields defined in the schema</p>;
  }

  return (
    <form className="space-y-4" onSubmit={handleSubmit(onSubmit)}>
      <h1 className="text-xl font-bold">{schema.formTitle}</h1>
      <p className="text-gray-600">{schema.formDescription}</p>
      {schema.fields.map((field) => (
        <div key={field.id}>
          <label className="block font-medium">{field.label}</label>
          {field.type === 'select' || field.type === 'radio' ? (
            field.options?.map((option) => (
              <div key={option.value} className="flex items-center">
                <input
                  {...register(field.id, { required: field.required })}
                  type={field.type}
                  value={option.value}
                  className="mr-2"
                />
                <span>{option.label}</span>
              </div>
            ))
          ) : (
            <input
              {...register(field.id, { 
                required: field.required,
                pattern: field.validation?.pattern ? 
                  new RegExp(field.validation.pattern) : undefined 
              })}
              placeholder={field.placeholder}
              className="border rounded p-2 w-full"
              type={field.type}
            />
          )}
          {errors[field.id] && (
            <p className="text-red-500">
              {field.validation?.message || 'This field is required'}
            </p>
          )}
        </div>
      ))}
      <button className="bg-blue-500 text-white px-4 py-2 rounded" type="submit">
        Submit
      </button>
    </form>
  );
};

export default FormRenderer;
